{
    "buildInfo": {
        "rustc": {
            "version": "1.80.1",
            "commitHash": "3f5fd8dd41153bc5fdca9427e9e05be2c767ba23",
            "commitDate": "2024-08-06",
            "channel": "Stable",
            "short": "rustc 1.80.1 (3f5fd8dd4 2024-08-06)"
        },
        "contractCrate": {
            "name": "ping-pong-egld",
            "version": "0.0.2"
        },
        "framework": {
            "name": "multiversx-sc",
            "version": "0.53.0"
        }
    },
    "abi": {
        "docs": [
            "A contract that allows anyone to send a fixed sum, locks it for a while and then allows users to take it back.",
            "Sending funds to the contract is called \"ping\".",
            "Taking the same funds back is called \"pong\".",
            "",
            "Restrictions:",
            "- `ping` can be called only after the contract is activated. By default the contract is activated on deploy.",
            "- Users can only `ping` once, ever.",
            "- Only the set amount can be `ping`-ed, no more, no less.",
            "- The contract can optionally have a maximum cap. No more users can `ping` after the cap has been reached.",
            "- The `ping` endpoint optionally accepts",
            "- `pong` can only be called after the contract expired (a certain duration has passed since activation).",
            "- `pongAll` can be used to send to all users to `ping`-ed. If it runs low on gas, it will interrupt itself.",
            "It can be continued anytime."
        ],
        "name": "PingPong",
        "constructor": {
            "docs": [
                "Necessary configuration when deploying:",
                "`ping_amount` - the exact EGLD amount that needs to be sent when `ping`-ing.",
                "`duration_in_seconds` - how much time (in seconds) until contract expires.",
                "`opt_activation_timestamp` - optionally specify the contract to only actvivate at a later date.",
                "`max_funds` - optional funding cap, no more funds than this can be added to the contract."
            ],
            "inputs": [
                {
                    "name": "ping_amount",
                    "type": "BigUint"
                },
                {
                    "name": "duration_in_seconds",
                    "type": "u64"
                },
                {
                    "name": "opt_activation_timestamp",
                    "type": "Option<u64>"
                },
                {
                    "name": "max_funds",
                    "type": "optional<BigUint>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        "upgradeConstructor": {
            "inputs": [
                {
                    "name": "ping_amount",
                    "type": "BigUint"
                },
                {
                    "name": "duration_in_seconds",
                    "type": "u64"
                },
                {
                    "name": "opt_activation_timestamp",
                    "type": "Option<u64>"
                },
                {
                    "name": "max_funds",
                    "type": "optional<BigUint>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        "endpoints": [
            {
                "docs": [
                    "User sends some EGLD to be locked in the contract for a period of time.",
                    "Optional `_data` argument is ignored."
                ],
                "name": "ping",
                "mutability": "mutable",
                "payableInTokens": [
                    "EGLD"
                ],
                "inputs": [
                    {
                        "name": "_data",
                        "type": "ignore",
                        "multi_arg": true
                    }
                ],
                "outputs": []
            },
            {
                "docs": [
                    "User can take back funds from the contract.",
                    "Can only be called after expiration."
                ],
                "name": "pong",
                "mutability": "mutable",
                "inputs": [],
                "outputs": []
            },
            {
                "docs": [
                    "Send back funds to all users who pinged.",
                    "Returns",
                    "- `completed` if everything finished",
                    "- `interrupted` if run out of gas midway.",
                    "Can only be called after expiration."
                ],
                "name": "pongAll",
                "mutability": "mutable",
                "inputs": [],
                "outputs": [
                    {
                        "type": "OperationCompletionStatus"
                    }
                ]
            },
            {
                "docs": [
                    "Lists the addresses of all users that have `ping`-ed,",
                    "in the order they have `ping`-ed"
                ],
                "name": "getUserAddresses",
                "mutability": "readonly",
                "inputs": [],
                "outputs": [
                    {
                        "type": "variadic<Address>",
                        "multi_result": true
                    }
                ]
            },
            {
                "docs": [
                    "Returns the current contract state as a struct",
                    "for faster fetching from external parties"
                ],
                "name": "getContractState",
                "mutability": "readonly",
                "inputs": [],
                "outputs": [
                    {
                        "type": "ContractState"
                    }
                ]
            },
            {
                "name": "getPingAmount",
                "mutability": "readonly",
                "inputs": [],
                "outputs": [
                    {
                        "type": "BigUint"
                    }
                ]
            },
            {
                "name": "getDeadline",
                "mutability": "readonly",
                "inputs": [],
                "outputs": [
                    {
                        "type": "u64"
                    }
                ]
            },
            {
                "docs": [
                    "Block timestamp of the block where the contract got activated.",
                    "If not specified in the constructor it is the the deploy block timestamp."
                ],
                "name": "getActivationTimestamp",
                "mutability": "readonly",
                "inputs": [],
                "outputs": [
                    {
                        "type": "u64"
                    }
                ]
            },
            {
                "docs": [
                    "Optional funding cap."
                ],
                "name": "getMaxFunds",
                "mutability": "readonly",
                "inputs": [],
                "outputs": [
                    {
                        "type": "Option<BigUint>"
                    }
                ]
            },
            {
                "docs": [
                    "State of user funds.",
                    "0 - user unknown, never `ping`-ed",
                    "1 - `ping`-ed",
                    "2 - `pong`-ed"
                ],
                "name": "getUserStatus",
                "mutability": "readonly",
                "inputs": [
                    {
                        "name": "user_id",
                        "type": "u32"
                    }
                ],
                "outputs": [
                    {
                        "type": "UserStatus"
                    }
                ]
            },
            {
                "docs": [
                    "Part of the `pongAll` status, the last user to be processed.",
                    "0 if never called `pongAll` or `pongAll` completed.."
                ],
                "name": "pongAllLastUser",
                "mutability": "readonly",
                "inputs": [],
                "outputs": [
                    {
                        "type": "u32"
                    }
                ]
            }
        ],
        "events": [
            {
                "docs": [
                    "Signals a successful ping by user with amount"
                ],
                "identifier": "",
                "inputs": [
                    {
                        "name": "caller",
                        "type": "Address",
                        "indexed": true
                    },
                    {
                        "name": "pinged_amount",
                        "type": "BigUint"
                    }
                ]
            },
            {
                "docs": [
                    "Signals a successful pong by user with amount"
                ],
                "identifier": "",
                "inputs": [
                    {
                        "name": "caller",
                        "type": "Address",
                        "indexed": true
                    },
                    {
                        "name": "ponged_amount",
                        "type": "BigUint"
                    }
                ]
            },
            {
                "docs": [
                    "Signals the beginning of the pong_all operation, status and last user"
                ],
                "identifier": "",
                "inputs": [
                    {
                        "name": "timestamp",
                        "type": "u64",
                        "indexed": true
                    },
                    {
                        "name": "status",
                        "type": "OperationCompletionStatus",
                        "indexed": true
                    },
                    {
                        "name": "pong_all_last_user",
                        "type": "u32",
                        "indexed": true
                    }
                ]
            }
        ],
        "esdtAttributes": [],
        "hasCallback": false,
        "types": {
            "ContractState": {
                "type": "struct",
                "fields": [
                    {
                        "name": "ping_amount",
                        "type": "BigUint"
                    },
                    {
                        "name": "deadline",
                        "type": "u64"
                    },
                    {
                        "name": "activation_timestamp",
                        "type": "u64"
                    },
                    {
                        "name": "max_funds",
                        "type": "Option<BigUint>"
                    },
                    {
                        "name": "pong_all_last_user",
                        "type": "u32"
                    }
                ]
            },
            "OperationCompletionStatus": {
                "type": "explicit-enum",
                "variants": [
                    {
                        "docs": [
                            "indicates that operation was completed"
                        ],
                        "name": "completed"
                    },
                    {
                        "docs": [
                            "indicates that operation was interrupted prematurely, due to low gas"
                        ],
                        "name": "interrupted"
                    }
                ]
            },
            "UserStatus": {
                "type": "enum",
                "variants": [
                    {
                        "name": "New",
                        "discriminant": 0
                    },
                    {
                        "name": "Registered",
                        "discriminant": 1
                    },
                    {
                        "name": "Withdrawn",
                        "discriminant": 2
                    }
                ]
            }
        }
    },
    "code": "0061736d0100000001641260027f7f006000017f60027f7f017f60017f017f60017f0060037f7f7f017f60017f017e60017e0060047f7f7f7f017f60057f7f7e7f7f017f6000006000017e60037f7f7f0060047f7f7f7f0060027f7f017e60027f7e0060027e7f0060037f7e7f0002b0062203656e760b7369676e616c4572726f72000003656e760a6d4275666665724e6577000103656e760d6d427566666572417070656e64000203656e760d6d42756666657246696e697368000303656e7619626967496e74476574556e7369676e6564417267756d656e74000003656e76106d4275666665724765744c656e677468000303656e760d6d616e6167656443616c6c6572000403656e76126d427566666572417070656e644279746573000503656e76126d616e616765645369676e616c4572726f72000403656e761b736d616c6c496e74476574556e7369676e6564417267756d656e74000603656e76126d427566666572476574417267756d656e74000203656e760f6765744e756d417267756d656e7473000103656e7616736d616c6c496e7446696e697368556e7369676e6564000703656e76136d42756666657247657442797465536c696365000803656e760f6d4275666665725365744279746573000503656e76196d42756666657246726f6d426967496e74556e7369676e6564000203656e76176d427566666572546f426967496e74556e7369676e6564000203656e76126d42756666657253746f726167654c6f6164000203656e76146d427566666572436f707942797465536c696365000803656e76136d42756666657253746f7261676553746f7265000203656e761b6d616e616765645472616e7366657256616c756545786563757465000903656e760f6d616e6167656457726974654c6f67000003656e7609626967496e74436d70000203656e760e636865636b4e6f5061796d656e74000a03656e7611676574426c6f636b54696d657374616d70000b03656e76136765744e756d455344545472616e7366657273000103656e7612626967496e7447657443616c6c56616c7565000403656e76106d616e61676564534341646472657373000403656e7618626967496e7447657445787465726e616c42616c616e6365000003656e7609626967496e74416464000c03656e760a6765744761734c656674000b03656e760666696e697368000003656e7614626967496e7446696e697368556e7369676e6564000403656e760f6d42756666657247657442797465730002035b5a0003010204030100030c0000010d040001010b040c0404040a0406080100080004030303000202030303020e03000d0c030300010c030300030f01010400100f110002010101010a0a0a0a040a0a0a0a0a0a0a0a0a0a0a0a05050405017001010105030100030616037f01418080080b7f0041add3080b7f0041b0d3080b07e60111066d656d6f7279020004696e6974006b0470696e67006c04706f6e67006e07706f6e67416c6c006f1067657455736572416464726573736573007010676574436f6e7472616374537461746500710d67657450696e67416d6f756e7400720b676574446561646c696e6500731667657441637469766174696f6e54696d657374616d7000740b6765744d617846756e647300750d6765745573657253746174757300760f706f6e67416c6c4c6173745573657200770863616c6c4261636b00780775706772616465006b0a5f5f646174615f656e6403010b5f5f686561705f6261736503020aea345a0d0020002001108080808000000b1701017f108180808000220120001082808080001a20010b0c004101410010a5808080000b1901017f10a880808000220220002001108e808080001a20020b0b0020001083808080001a0b1601017f200010a880808000220110848080800020010b1d01017f410041002802ec84888000417f6a22003602ec8488800020000b6f01027f23808080800041106b22022480808080002002200010aa808080002203108580808000220041187420004180fe03714108747220004108764180fe03712000411876727236020c20012002410c6a410410ab808080002001200310ac80808000200241106a2480808080000b1701017f10a88080800022012000108f808080001a20010b0f002000200120021087808080001a0b0d00200020011082808080001a0b0d002000200110a280808000000b1401017f10a880808000220010868080800020000b4601017f418d80888000411710a5808080002204200020011087808080001a200441a48088800041031087808080001a2004200220031087808080001a2004108880808000000b100020004100280288d38880003602000b4901027f4100210202400240200128020022034100280288d3888000480d00410121020c010b2001200341016a360200200310a78080800021010b20002001360204200020023602000b3401017e024041001089808080002200428080808010540d00419a828880004107418881888000410e10af80808000000b2000a70b0a00410010a7808080000b0a0041011089808080000b820302037f027e23808080800041206b2201248080808000410210a8808080002202108a808080001a20021085808080002103200141003a0014200120033602102001200236020c200120033602082001410036020402400240024020030d00420021040c010b200141003a0018200141046a200141186a410110b6808080004200210402400240024020012d00180e020201000b4182828880004118418080888000410d10af80808000000b20014200370318200141046a200141186a410810b6808080002001290318220442388620044280fe0383422886842004428080fc0783421886200442808080f80f834208868484200442088842808080f80f832004421888428080fc07838420044228884280fe038320044238888484842105420121040b20012802082001280204470d0120012d0014450d0041004100360280d3888000410041003a0084d38880000b2000200537030820002004370300200141206a2480808080000f0b4182828880004118418881888000410e10af80808000000b38000240200041086a20002802002001200210c080808000450d00418282888000411810df80808000000b2000200028020020026a3602000b230002404100280288d388800020004a0d000f0b41dd808880004112108080808000000b20000240108b808080002000470d000f0b41ef808880004119108080808000000b230002404100280288d38880002000480d000f0b41cc808880004111108080808000000b11004100108b80808000360288d38880000b1000200010bc80808000108c808080000b0c002000200010cd808080000b13002000200120032002108d808080004100470b1901017f10a880808000220041014100108e808080001a20000b5601017f23808080800041106b22022480808080002002200141187420014180fe03714108747220014108764180fe03712001411876727236020c20002002410c6a41041087808080001a200241106a2480808080000bdb0101027f0240024002400240024020002d00080d002000280200220410858080800022054190ce004b0d0141002d0084d388800041ff01710d0141002005360280d3888000410041013a0084d38880002004410041f084888000200510bd808080001a200041013a00080b41012104200320016a22004100280280d38880004b0d0120002001490d0220004190ce004b0d032002200141f0848880006a200310fb808080001a41000f0b200041003a0008200420012002200310bd8080800021040b20040f0b2001200010c180808000000b200010c280808000000b090010f980808000000b090010f980808000000b1701017f200010a88080800022011090808080001a20010b1701017f200010a88080800022011091808080001a20010b1500200041671091808080001a41671085808080000b5601017f23808080800041106b22022480808080002002200141187420014180fe03714108747220014108764180fe03712001411876727236020c20002002410c6a41041087808080001a200241106a2480808080000b12002000200110c88080800010c9808080000b2700200010a380808000220041c581888000410e1087808080001a2000200110ac8080800020000b3001017e02402000200010cd808080002201428080808010540d002000418881888000410e10d180808000000b2001a70b1000200010cb8080800010c9808080000b1d00200010a380808000220041d38188800041061087808080001a20000b2700200010a380808000220041d981888000410e1087808080001a2000200110c68080800020000bc60102027f017e23808080800041106b2202248080808000200242003703080240200010c480808000220310858080800022004109490d002001418881888000410e10d180808000000b20034100200241086a20006b41086a200010bd808080001a20022903082104200241106a248080808000200442388620044280fe0383422886842004428080fc0783421886200442808080f80f834208868484200442088842808080f80f832004421888428080fc07838420044228884280fe038320044238888484840b1000200010c48080800010c3808080000b8d0301057f23808080800041206b220224808080800041002103200110c48080800022041085808080002105200241003a001820022005360214200220043602102002200536020c20024100360208024002400240024020050d000c010b41002103200241003a001c200241086a2002411c6a4101200110d080808000024002400240024020022d001c0e020002010b200228020821040c020b2001418080888000410d10d180808000000b2002410036021c200241086a2002411c6a4104200110d080808000200228021c210520022802082103108180808000210620022802102003200541187420054180fe03714108747220054108764180fe037120054118767272220520061092808080000d02200320056a210441012103200610c38080800021050b200228020c2004470d0220022d0018450d0041004100360280d3888000410041003a0084d38880000b2000200536020420002003360200200241206a2480808080000f0b2001419681888000410f10d180808000000b2001418881888000410e10d180808000000b32000240200041086a20002802002001200210c080808000450d00200310de80808000000b2000200028020020026a3602000b4401017f41e781888000411b10a580808000220320001082808080001a200341a48088800041031087808080001a2003200120021087808080001a2003108880808000000b6102017e017f0240200010c5808080000d0041000f0b024002402000200010cd8080800022014280025a0d002001a7220241ff017141034f0d0120020f0b2000418881888000410e10d180808000000b2000418080888000410d10d180808000000b110010be808080001a200010aa808080000b190010be808080001a2000200110a38080800010bf808080000b1e01017f10be8080800022004101410010a58080800010bf8080800020000b150020002001200210a5808080001093808080001a0b2f01017f0240200010c48080800022011085808080004120460d00200041ed83888000411010d180808000000b20010b0a00200010c5808080000bd70101037f41a1828880002102411821030240024002400240200110da8080800010d28080800041ff01710e03030001030b200110da80808000420210db80808000410c210310dc80808000200110cc80808000220210d8808080000d0141b98288800021020c020b41c5828880002102411121030c010b200210d780808000220210dd8080800010ce808080002201420010be8080800010be808080001094808080001a10d5808080002204200210d4808080002004200110d380808000109580808000410021020b20002003360204200020023602000b1e01017f418b84888000410a10a5808080002201200010c68080800020010b4801017f23808080800041106b22022480808080002002420037030820022001200241086a10e28080800020002002280200200228020410d680808000200241106a2480808080000b1000418784888000410410a5808080000b100041fd83888000410a10a5808080000b13002000419681888000410f10d180808000000b150020002001419681888000410f10af80808000000b870101017f23808080800041106b22022480808080002002200042388620004280fe0383422886842000428080fc0783421886200042808080f80f834208868484200042088842808080f80f832000421888428080fc07838420004228884280fe038320004238888484843703082001200241086a410810ab80808000200241106a2480808080000b4901017f23808080800041106b22022480808080002002420037030820022001200241086a10e280808000200020022802002002280204108e808080001a200241106a2480808080000bea0102027e027f2002200142388620014280fe0383422886842001428080fc0783421886200142808080f80f834208868484200142088842808080f80f832001421888428080fc078384200142288822034280fe0383200142388822048484843700002000410841002004a74522052001423088a741ff01711b220620056a410020062003a741ff01711b22056a410020052001422088a741ff01711b22066a410020062001a722054118761b22066a41002006200541107641ff01711b22066a41002006200541087641ff01711b22056a200541002001501b6a22056b3602042000200220056a3602000b3601017f23808080800041106b2202248080808000200220013a000f20002002410f6a410110ab80808000200241106a2480808080000b1900417f20002001109680808000220141004720014100481b0b1000419584888000410f10a5808080000b100041a484888000411310a5808080000b100041b784888000410810a5808080000b100041bf84888000410810a5808080000b090010ea80808000000b110041db84888000410e108080808000000b9b0203027f027e037f23808080800041206b220024808080800010978080800010ba80808000410310b98080800010b380808000210110b4808080002102200041086a10b58080800020002903102103200028020821042000410336021c20002000411c6a10b1808080002000280204210520002802002106200028021c10b78080800010dd80808000200110aa808080001093808080001a024020040d0010988080800021030b10e780808000200320027c10db8080800010e680808000200310db8080800010e8808080002101024002402006450d0020014101410010d6808080000c010b4101410010a5808080002204410110e3808080002005200410a980808000200120041093808080001a0b200041206a2480808080000bf80403037f017e027f23808080800041106b2200248080808000024002400240024002401099808080000d0010ba80808000410010b9808080002000410036020c2000410c6a10b080808000200028020c10b780808000417521010240024041002d008cd38880002202450d00417541ffffffff0720021b21010c010b410041013a008cd38880004175109a808080000b200110dd8080800010ce8080800010e48080800041ff01710d01109880808000210310e68080800010bc808080002003560d02200310e78080800010bc808080005a0d03200010e88080800010cf80808000024020002802004101470d002000280204210410a8808080002205109b8080800010a8808080002102200510ed80808000418dd38880002002109c8080800010a880808000220520022001109d808080002005200410e48080800041ff01714101460d050b10ae808080002102024010dc808080002205200210c78080800022040d00200510ca808080002104200510cb80808000200441016a2204ad220310db808080002005200210c880808000200310db808080002005200410cc8080800020021093808080001a0b024002400240200410da8080800010d28080800041ff01710e03020001020b41bd83888000411210ad80808000000b41c582888000411110ad80808000000b200410da80808000420110db8080800010d5808080002204200210d4808080002004200110d380808000109580808000200041106a2480808080000f0b41a7808880004125108080808000000b41d682888000412410ad80808000000b41fa82888000411d10ad80808000000b419783888000411310ad80808000000b41aa83888000411310ad80808000000b11002000418dd388800010a1808080001a0b910101027f23808080800041106b2200248080808000109780808000410010b8808080000240024010988080800010e78080800010bc80808000540d0010ae808080002101200041086a10dc80808000200110c78080800010d980808000200028020822010d01200041106a2480808080000f0b41cf83888000411e10ad80808000000b2001200028020c10ad80808000000be80205017f017e027f017e027f23808080800041106b2200248080808000109780808000410010b880808000024002400240109880808000220110e78080800010bc80808000540d0010dc8080800010ca80808000210210e58080800010c98080800022032002200320024b1b2102034020022003460d020240109e8080800042c08db701540d00200041086a200341016a220310d9808080000c010b0b10e5808080002003ad220410db80808000410b210241d08488800021050c020b41cf83888000411e10ad80808000000b4200210410e580808000420010db808080004109210241c78488800021050b10d580808000210310be808080002206200110e1808080002003200610bf8080800010be80808000220620052002108e808080001a2003200610bf8080800010be808080002206200410e1808080002003200610bf80808000200310be8080800010958080800020052002109f80808000200041106a2480808080000bd10301077f23808080800041106b220024808080800010978080800041002101410010b88080800010dc80808000220210ca80808000210310be808080002104410121050240034020014101710d01200520034b0d01024002402002200510cc80808000220610d8808080000d0041a581888000412010a58080800021060c010b200610d78080800021060b200520034f2101200520052003496a21052000200641187420064180fe03714108747220064108764180fe0371200641187672723602042004200041046a41041087808080001a0c000b0b10be808080002106200410858080800021014100210502400340200541046a220320014b0d012000410036020820042005200041086a410410bd808080001a2000280208210510be808080001a2006200541187420054180fe03714108747220054108764180fe03712005411876727210a38080800010bf80808000200321050c000b0b200610858080800021014100210502400340200541046a220320014b0d012000410036020c200620052000410c6a410410bd808080001a200028020c220541187420054180fe03714108747220054108764180fe0371200541187672721083808080001a200321050c000b0b200041106a2480808080000b920203027f027e047f23808080800041106b2200248080808000109780808000410010b88080800010dd8080800010ce80808000210110e78080800010bc80808000210210e68080800010bc808080002103200010e88080800010cf80808000200028020421042000280200210510e58080800010c9808080002106200110a480808000220710a9808080002002200710e0808080002003200710e0808080000240024020050d002007410010e3808080000c010b2007410110e3808080002004200710a9808080000b2000200641187420064180fe03714108747220064108764180fe03712006411876727236020c20072000410c6a41041087808080001a200710a680808000200041106a2480808080000b2200109780808000410010b88080800010dd8080800010ce8080800010a0808080000b1c00109780808000410010b88080800010e78080800010bb808080000b1c00109780808000410010b88080800010e68080800010bb808080000b810101037f23808080800041106b2200248080808000109780808000410010b880808000200041086a10e88080800010cf808080000240024020002802080d0041014100109f808080000c010b200028020c210110a4808080002202410110e3808080002001200210a980808000200210a6808080000b200041106a2480808080000b2d00109780808000410110b88080800010b28080800010da8080800010d280808000ad42ff0183108c808080000b2300109780808000410010b88080800010e58080800010c980808000ad108c808080000b02000b090010e980808000000bc10201087f02400240200241104f0d00200021030c010b2000410020006b41037122046a210502402004450d0020002103200121060340200320062d00003a0000200641016a2106200341016a22032005490d000b0b2005200220046b2207417c7122086a210302400240200120046a2209410371450d0020084101480d012009410374220641187121022009417c71220a41046a2101410020066b4118712104200a28020021060340200520062002762001280200220620047472360200200141046a2101200541046a22052003490d000c020b0b20084101480d0020092101034020052001280200360200200141046a2101200541046a22052003490d000b0b20074103712102200920086a21010b02402002450d00200320026a21050340200320012d00003a0000200141016a2101200341016a22032005490d000b0b20000b0e0020002001200210fa808080000b0bfd040200418080080be904696e76616c69642076616c7565617267756d656e74206465636f6465206572726f722028293a2066756e6374696f6e20646f6573206e6f74206163636570742045534454207061796d656e74746f6f2066657720617267756d656e7473746f6f206d616e7920617267756d656e747377726f6e67206e756d626572206f6620617267756d656e7473696e70757420746f6f206c6f6e67696e70757420746f6f2073686f727400000000000000000000000000000000000000000000000000000000000000005f616464726573735f746f5f69645f636f756e745f69645f746f5f6164647265737373746f72616765206465636f6465206572726f7220286b65793a206f70745f61637469766174696f6e5f74696d657374616d70757365725f696463616e277420706f6e672c206e657665722070696e676564756e6b6e6f776e2075736572616c72656164792077697468647261776e746865207061796d656e74206d757374206d61746368207468652066697865642073756d736d61727420636f6e7472616374206e6f742061637469766520796574646561646c696e652068617320706173736564736d61727420636f6e74726163742066756c6c63616e206f6e6c792070696e67206f6e636563616e2774207769746864726177206265666f726520646561646c696e65626164206172726179206c656e67746870696e67416d6f756e747573657275736572537461747573706f6e67416c6c4c6173745573657261637469766174696f6e54696d657374616d70646561646c696e656d617846756e6473636f6d706c65746564696e74657272757074656470616e6963206f636375727265640041ec84080b0438ffffff",
    "report": {
        "imports": [
            "bigIntAdd",
            "bigIntCmp",
            "bigIntFinishUnsigned",
            "bigIntGetCallValue",
            "bigIntGetExternalBalance",
            "bigIntGetUnsignedArgument",
            "checkNoPayment",
            "finish",
            "getBlockTimestamp",
            "getGasLeft",
            "getNumArguments",
            "getNumESDTTransfers",
            "mBufferAppend",
            "mBufferAppendBytes",
            "mBufferCopyByteSlice",
            "mBufferFinish",
            "mBufferFromBigIntUnsigned",
            "mBufferGetArgument",
            "mBufferGetByteSlice",
            "mBufferGetBytes",
            "mBufferGetLength",
            "mBufferNew",
            "mBufferSetBytes",
            "mBufferStorageLoad",
            "mBufferStorageStore",
            "mBufferToBigIntUnsigned",
            "managedCaller",
            "managedSCAddress",
            "managedSignalError",
            "managedTransferValueExecute",
            "managedWriteLog",
            "signalError",
            "smallIntFinishUnsigned",
            "smallIntGetUnsignedArgument"
        ],
        "isMemGrow": false,
        "eiCheck": {
            "eiVersion": "1.3",
            "ok": true
        },
        "codeReport": {
            "path": "../output/ping-pong-egld.wasm",
            "size": 8696,
            "hasAllocator": false,
            "hasPanic": "without message"
        }
    }
}
